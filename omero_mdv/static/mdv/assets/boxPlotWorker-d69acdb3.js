(function(){"use strict";onmessage=function(s){if(s.data[4].analysis==="multi"){this.postMessage(I(s));return}const f=new Uint8Array(s.data[0]),o=new Uint8Array(s.data[1]),u=new Uint8Array(s.data[2]),d=s.data[3][1]==="int32"?Int32Array:Float32Array,h=new d(s.data[3][0]),e=s.data[4],i=h.length,r=e.values.length,l=new Array(r).fill(0);for(let t=0;t<i;t++)o[t]!==0&&o[t]!==f[t]||l[u[t]]++;const m=[];for(let t=0;t<r;t++)m.push(new d(l[t]));const p=new Array(r).fill(0),M=new Float32Array(e.xPos);for(let t=0;t<i;t++){if(o[t]!==0&&o[t]!==f[t])continue;const n=u[t];m[n][p[n]++]=h[t]}const y=[];if(e.analysis==="boxplot"){const t={};for(let n=0;n<r;n++){const a=m[n],c=a.length;if(c==0)continue;a.sort();const N=w(0,c),v=a[N],A=a[w(0,N)],b=a[w(N+1,c)],x=b-A;let g=A-1.5*x,Q=b+1.5*x;g=g<a[0]?a[0]:g,Q=Q>a[c-1]?a[c-1]:Q,t[n]=y.length,y.push({max:Q,min:g,Q1:A,Q3:b,med:v,id:n})}for(let n=0;n<i;n++){const a=t[u[n]];a!==void 0&&(M[n]=a*50+4+Math.random()*42)}}else{const t={};for(let n=0;n<r;n++){let a=null;e.scaletrim?a=U(m[n],e.ticks,e.scaletrim,e.bandwidth||7):a=F(m[n],e.ticks,e.bandwidth||7);const c=Math.max(...a);c!==0&&!isNaN(c)&&(a.id=n,a.max=c,t[n]=[y.length,c,a],y.push(a))}e.ticks[e.ticks.length-1],e.ticks[0]-e.ticks[1];for(let n=0;n<i;n++){const a=t[u[n]];a&&(M[n]=a[0]*50+4+Math.random()*42)}}postMessage(y)};function w(s,f){return s+Math.round((f-s)/2)}function U(s,f,o,u=2){const d=o[1]-o[0];return f.map(function(h){let e=0,i=0;for(let r=0;r<s.length;r++){let l=s[r];if(!isNaN(l)){l=(l-o[0])/d,l=l<0?0:l>1?1:l;let m=h-l;e+=Math.abs(m/=u)<=1?.75*(1-m*m)/u:0,i++}}return e/i})}function F(s,f,o=2){return f.map(function(u){let d=0,h=0;for(let e=0;e<s.length;e++){let i=s[e];if(!isNaN(i)){let r=u-i;d+=Math.abs(r/=o)<=1?.75*(1-r*r)/o:0,h++}}return d/h})}function I(s){const f=[];for(let t of s.data[2])f.push(t[1]==="int32"?new Int32Array(t[0]):new Float32Array(t[0]));const o=f.length,u=s.data[4],d=u.scaleVals;for(let t of d)t.push(t[1]-t[0]);new Uint8Array(s.data[0]);const h=new Uint8Array(s.data[1]),e=h.length,i=new Array(o),r=new Uint8Array(s.data[3]),l=u.cat;let m=0;for(let t=0;t<e;t++)r[t]===l&&h[t]===0&&m++;for(let t=0;t<o;t++)i[t]=new Float64Array(m);count=0;for(let t=0;t<e;t++)if(r[t]===l&&h[t]===0){for(let n=0;n<o;n++){let a=(f[n][t]-d[n][0])/d[n][2];i[n][count]=a<0?0:a>1?1:a}count++}const p=[];let M=Number.MAX_VALUE,y=Number.MIN_VALUE;for(let t=0;t<o;t++){const n=i[t],a=n.length;n.sort();const c=w(0,a),N=n[c],v=n[w(0,c)],A=n[w(c+1,a)],b=A-v;let x=v-1.5*b,g=A+1.5*b;x=x<n[0]?n[0]:x,g=g>n[a-1]?n[a-1]:g,M=Math.min(M,x),y=Math.max(y,g),p.push({max:g,min:x,Q1:v,Q3:A,med:N,id:t})}return p.max=y,p.min=M,p}})();
